export const _labMD =
  '<p>Given an array of integers&nbsp;<code style="color: rgba(239, 241, 246, 0.75); background-color: rgba(255, 255, 255, 0.07);">nums</code>&nbsp;and an integer&nbsp;<code style="color: rgba(239, 241, 246, 0.75); background-color: rgba(255, 255, 255, 0.07);">target</code>, return&nbsp;<em>indices of the two numbers such that they add up to&nbsp;</em><code style="color: rgba(239, 241, 246, 0.75); background-color: rgba(255, 255, 255, 0.07);"><em>target</em></code>.</p><p><br></p><p>You may assume that each input would have&nbsp;<strong><em>exactly</em>&nbsp;one solution</strong>, and you may not use the&nbsp;<em>same</em>&nbsp;element twice.</p><p><br></p><p>You can return the answer in any order.</p><p>&nbsp;</p><p><strong>Example 1:</strong></p><pre class="ql-syntax" spellcheck="false"><span class="hljs-title class_">Input</span>: nums = [<span class="hljs-number">2</span>,<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">15</span>], target = <span class="hljs-number">9</span>\n<span class="hljs-title class_">Output</span>: [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]\n<span class="hljs-title class_">Explanation</span>: <span class="hljs-title class_">Because</span> nums[<span class="hljs-number">0</span>] + nums[<span class="hljs-number">1</span>] == <span class="hljs-number">9</span>, we <span class="hljs-keyword">return</span> [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>].\n</pre><p><strong>Example 2:</strong></p><pre class="ql-syntax" spellcheck="false">Input: nums = [<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>], target = <span class="hljs-number">6</span>\nOutput: [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]\n</pre><p><strong>Example 3:</strong></p><pre class="ql-syntax" spellcheck="false">Input: nums = [<span class="hljs-number">3</span>,<span class="hljs-number">3</span>], target = <span class="hljs-number">6</span>\nOutput: [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]\n</pre><p>&nbsp;</p>';
